#!/bin/sh

if [[ -z "$DOTFILES_DIR" ]]; then
    echo 'Error: $DOTFILES_DIR is not set' >&2
    exit 2
fi

dotenv() {
    src="$DOTFILES_DIR/$1"
    if [[ -z "$src" ]]; then
        echo 'Usage: dotenv env_src'
        return 2
    fi
    if [[ ! -e "$src" ]]; then
        echo "Env file not found: $src"
        return 1
    fi
    set -a
    source "$src"
    set +a
}

dotsecrets() {
    if [[ -f "$DOTFILES_DIR"/shell/secrets ]]; then
        dotenv shell/secrets
    fi
}

# Adapted from https://stackoverflow.com/a/3915420/1530494
# Since this should be /bin/sh compatible, only backticks are used.
realpath() {
    src=$1
    dir=`dirname "$src"`
    base=`basename "$src"`
    echo -n "`cd "$dir" && pwd`/$base"
}

lazyfunc_apply() {
    func_name=$1; shift
    func_src=`realpath "$1"`; shift
    eval "$func_name() {
        `cat "$func_src"`
    }"
    "$func_name" "$@"
}

lazyfunc() {
    func_name=$1
    func_src=$2
    if [[ -z "$func_name" || -z "$func_src" ]]; then
        echo 'Usage: lazyfunc func_name func_src' >&2
        return 2
    fi
    if [[ ! -e "$func_src" ]]; then
        echo "lazyfunc: Function source does not exist: '$func_src'" >&2
        return 1
    fi
    eval \
    "$func_name"'() {
        '"lazyfunc_apply '$func_name' '$func_src'"' "$@"
    }'
}

lazyfunc_dir() {
    dir=$1
    if [[ -z "$dir" || ! -d "$dir" ]]; then
        echo 'Usage: lazyfunc_dir FUNCTION_DIRECTORY' >&2
        return 2
    fi
    for func_file in "$dir"/*; do
        func_name=`basename "$func_file"`
        if [[ ! -d "$func_file" ]]; then
            lazyfunc "$func_name" "$func_file"
        fi
    done
}
