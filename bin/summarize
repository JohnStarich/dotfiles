#!/usr/bin/env python3

from sumy.parsers.html import HtmlParser
from sumy.parsers.plaintext import PlaintextParser
from sumy.nlp.tokenizers import Tokenizer
from sumy.summarizers.lsa import LsaSummarizer as Summarizer
from sumy.nlp.stemmers import Stemmer
from sumy.utils import get_stop_words
from path import Path

import argparse
import markdown2
import re
import sys

timestamp = re.compile(r"([*-+] )\d\d:\d\d [AP]M \| ")
code_block = re.compile("<code>.*</code>", re.DOTALL)


def strip_timestamp(s):
    """Remove custom timestamp prefix on bullet points"""
    m = timestamp.match(s)
    if m is not None:
        return m.group(1) + s[m.end():]
    return s


def strip_code_blocks(s):
    return code_block.sub('', s)


def summarize(markdown_lines, language="english", summary_length=10):
    summarizer = Summarizer(Stemmer(language))
    summarizer.stop_words = get_stop_words(language)

    markdown_lines = map(strip_timestamp, markdown_lines)
    markdown_text = '\n'.join(markdown_lines)
    text = markdown2.markdown(markdown_text)
    text = strip_code_blocks(text)

    parser = HtmlParser.from_string(text, tokenizer=Tokenizer(language), url=None)
    for sentence in summarizer(parser.document, summary_length):
        print(sentence)


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument('files', nargs='+')
    parser.add_argument('--length', default=10, type=int, help='Number of sentences in summary')
    args = parser.parse_args()

    files = map(lambda s: Path(s), args.files)
    lines = []

    for file_path in files:
        if not file_path.exists():
            print("File does not exist: '%s'" % file_path)
            sys.exit(1)
        if file_path.isdir():
            for document in file_path.files('*.md'):
                with document.open(mode='rt', encoding='utf-8') as fp:
                    lines += fp.readlines()
        else:
            with file_path.open(mode='rt', encoding='utf-8') as fp:
                lines += fp.readlines()

    summarize(lines, summary_length=args.length)
